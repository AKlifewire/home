name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'bin/**'
      - 'cdk/**'
      - 'lambda/**'
      - 'lib/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'bin/**'
      - 'cdk/**'
      - 'lambda/**'
      - 'lib/**'
      - 'package.json'
      - 'package-lock.json'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run tests
        run: npm test
  
  deploy-dev:
    name: Deploy to Dev
    needs: test
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy CDK stacks
        run: npx cdk deploy --all --require-approval never --context environment=dev
      
      - name: Update frontend config
        run: node update-frontend-config.js --env dev
      
      - name: Upload frontend config
        uses: actions/upload-artifact@v3
        with:
          name: frontend-config-dev
          path: smart_home_flutter/lib/config/amplifyconfiguration.dart
  
  deploy-prod:
    name: Deploy to Production
    needs: test
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy CDK stacks
        run: npx cdk deploy --all --require-approval never --context environment=prod
      
      - name: Update frontend config
        run: node update-frontend-config.js --env prod
      
      - name: Upload frontend config
        uses: actions/upload-artifact@v3
        with:
          name: frontend-config-prod
          path: smart_home_flutter/lib/config/amplifyconfiguration.dart