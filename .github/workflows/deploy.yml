name: Deploy CDK Stacks

on:
  push:
    branches:
      - main  # Trigger deployment on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Use the Node.js version compatible with your CDK app

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build Lambda code
      - name: Build Lambda code
        run: npm run build

      # Step 5: Create Lambda asset folders (if needed)
      - name: Create Lambda asset folders (if needed)
        run: |
          mkdir -p dist/lambdas/resolvers
          mkdir -p dist/lambdas/automation
          mkdir -p dist/lambdas/iot
          mkdir -p dist/lambdas/stripe
          echo "// placeholder" > dist/lambdas/resolvers/index.js
          echo "// placeholder" > dist/lambdas/automation/index.js
          echo "// placeholder" > dist/lambdas/iot/index.js
          echo "// placeholder" > dist/lambdas/stripe/index.js

      # Step 6: Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your desired AWS region

      # Step 7: Deploy CDK stacks
      - name: Deploy CDK Stacks
        run: npx cdk deploy --all --require-approval never -c env=prod