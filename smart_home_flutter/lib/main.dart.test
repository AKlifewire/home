import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:amplify_flutter/amplify_flutter.dart';
import 'package:amplify_auth_cognito/amplify_auth_cognito.dart';
import 'package:amplify_api/amplify_api.dart';
import 'package:amplify_storage_s3/amplify_storage_s3.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import 'config/aws_configuration.dart';
import 'providers/auth_provider.dart';
import 'providers/device_provider.dart';
import 'providers/mqtt_provider.dart';
import 'screens/splash_screen.dart';

// This is a test version of main.dart that can be used for integration testing
// It configures the app with test credentials and enables test-specific features

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  // Configure Amplify for testing
  await _configureAmplify();
  
  runApp(
    ProviderScope(
      child: MultiProvider(
        providers: [
          ChangeNotifierProvider(create: (_) => AuthProvider()),
          ChangeNotifierProvider(create: (_) => DeviceProvider()),
          ChangeNotifierProvider(create: (_) => MqttProvider()),
        ],
        child: const MyApp(),
      ),
    ),
  );
}

Future<void> _configureAmplify() async {
  try {
    // Configure Auth plugin
    final authPlugin = AmplifyAuthCognito();
    
    // Configure API plugin
    final apiPlugin = AmplifyAPI();
    
    // Configure Storage plugin
    final storagePlugin = AmplifyStorageS3();
    
    // Add plugins to Amplify
    await Amplify.addPlugins([authPlugin, apiPlugin, storagePlugin]);
    
    // Configure Amplify
    final authConfig = {
      "UserAgent": "aws-amplify-cli/2.0",
      "Version": "1.0",
      "auth": {
        "plugins": {
          "awsCognitoAuthPlugin": {
            "UserAgent": "aws-amplify/cli",
            "Version": "0.1.0",
            "IdentityManager": {
              "Default": {}
            },
            "CredentialsProvider": {
              "CognitoIdentity": {
                "Default": {
                  "PoolId": Configuration.identityPoolId,
                  "Region": Configuration.region
                }
              }
            },
            "CognitoUserPool": {
              "Default": {
                "PoolId": Configuration.userPoolId,
                "AppClientId": Configuration.clientId,
                "Region": Configuration.region
              }
            }
          }
        }
      },
      "api": {
        "plugins": {
          "awsAPIPlugin": {
            "smartHomeAPI": {
              "endpointType": "GraphQL",
              "endpoint": Configuration.appSyncApiUrl,
              "region": Configuration.region,
              "authorizationType": "AMAZON_COGNITO_USER_POOLS"
            }
          }
        }
      },
      "storage": {
        "plugins": {
          "awsS3StoragePlugin": {
            "bucket": Configuration.uiLayoutBucket,
            "region": Configuration.region
          }
        }
      }
    };
    
    await Amplify.configure(authConfig);
    safePrint('Amplify configured for testing');
  } catch (e) {
    safePrint('Error configuring Amplify: $e');
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Smart Home App (Test)',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        useMaterial3: true,
      ),
      home: const SplashScreen(),
    );
  }
}